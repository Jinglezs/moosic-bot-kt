plugins {
    id 'java'
    id 'idea'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
}

group 'net.jingles'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    maven { url 'https://jitpack.io' }
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3"
    implementation 'org.jetbrains.exposed:exposed:0.17.7'
    implementation ('net.dv8tion:JDA:4.1.1_101') {
        exclude module: 'opus-java'
    }
    implementation 'com.vdurmont:emoji-java:5.1.1'
    implementation 'org.reflections:reflections:0.9.10'
    implementation group: 'com.adamratzman', name: 'spotify-api-kotlin', version: '3.0.01'
    implementation 'io.undertow:undertow-servlet:2.0.1.Final'
    implementation 'mysql:mysql-connector-java:5.1.46'
    implementation 'com.github.jkcclemens:khttp:0.1.0'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    manifest{
        attributes('Main-Class': 'net.jingles.moosic.MoosicBot', 'Class-Path': configurations.runtimeClasspath.files.collect { it.getName() }.join(' '))
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

task stage(dependsOn: ['jar', 'clean'])
jar.mustRunAfter clean